generator client {
  provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url = env("DATABASE_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  uuid        String    @unique
  kakaoId     String?   @unique
  iosToken    String?
  createdAt   DateTime  @default(now())
  fcmToken    String?   @unique
  appleId     String?   @unique
  Profile     Profile?
  posts       Post[]
  comments    Comment[]
  chatRooms   ChatRoomUser[]
  messages    Message[]
}

model Profile {
  id           Int    @id @default(autoincrement())
  userId       Int    @unique
  profileImage String?
  username     String @unique
  user         User   @relation(fields: [userId], references: [id])
}

model Post {
  id          Int      @id @default(autoincrement())
  title       String
  content     String
  authorId    Int
  author      User     @relation(fields: [authorId], references: [id])
  comments    Comment[]
  likes       PostLike[]
  cityId      Int
  districtId  Int?
}

model PostLike {
  userId    Int
  postId    Int
  post      Post    @relation(fields: [postId], references: [id])

  @@id([userId, postId])
}

model Comment {
  id                Int      @id @default(autoincrement())
  content           String
  authorId          Int
  author            User     @relation(fields: [authorId], references: [id])
  postId            Int
  post              Post     @relation(fields: [postId], references: [id])
  parentCommentId   Int?
  parentComment     Comment?    @relation("CommentToComment", fields: [parentCommentId], references: [id])
  childComments     Comment[]   @relation("CommentToComment")
}

model ChatRoomUser {
  user        User           @relation(fields: [userId], references: [id])
  userId      Int
  chatRoom    ChatRoom       @relation(fields: [chatRoomId], references: [id])
  chatRoomId  Int

  @@id([userId, chatRoomId])
}

model ChatRoom {
  id          Int            @id @default(autoincrement())
  users       ChatRoomUser[]
  messages    Message[]
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
}

model Message {
  id          Int      @id @default(autoincrement())
  content     String
  senderId    Int
  chatRoomId  Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  sender      User     @relation(fields: [senderId], references: [id])
  chatRoom    ChatRoom @relation(fields: [chatRoomId], references: [id])
}

model City {
  id          Int @id @default(autoincrement())
  name        String
  districts   District[]
}

model District {
  id          Int @id @default(autoincrement())
  cityId      Int
  city        City @relation(fields: [cityId], references: [id])
  name        String
}